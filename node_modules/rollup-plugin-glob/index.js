const path = require('path')
const md5 = require('md5')
const glob = require('glob')
const { createFilter } = require('rollup-pluginutils')
const toURLString = require('./to-url-string')

module.exports = ({ include, exclude } = {}) => {
  const filter = createFilter(include, exclude)
  const map = {}

  return {
    name: 'rollup-plugin-glob',

    resolveId (importee, importer) {
      if (!filter(importee) || !importee.includes('*')) {
        return
      }

      const hash = md5(importee + importer)
      const id = `$$___$$${hash}`
      map[id] = { importee, importer }
      return id
    },

    load (id) {
      if (!/^\$\$___\$\$/.test(id)) {
        return
      }

      const { importee, importer } = map[id]
      const importeeIsAbsolute = path.isAbsolute(importee)
      const cwd = path.dirname(importer)
      const globPattern = importee

      const files = glob.sync(globPattern, { cwd })

      let code = {
        imports: [],
        exports: []
      }

      files.forEach((file, i) => {
        let from
        if (importeeIsAbsolute) {
          from = toURLString(file)
        } else {
          from = toURLString(path.resolve(cwd, file))
        }

        code.imports.push(`import Mod${i} from '${from}';`)
        code.exports.push(`Mod${i}`)
      })

      const result = `${code.imports.join('\n')}
export default [
  ${code.exports.join(',\n  ')}
];`
      return result
    }
  }
}
